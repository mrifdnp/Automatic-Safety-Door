
AVRASM ver. 2.1.30  D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm Tue May 23 12:07:43 2023

D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1417): warning: Register r4 already defined by the .DEF directive
D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1418): warning: Register r5 already defined by the .DEF directive
D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1419): warning: Register r7 already defined by the .DEF directive
D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1420): warning: Register r6 already defined by the .DEF directive
D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1421): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _count=R4
                 	.DEF _count_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0098 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4553
000034 534e
000035 524f
000036 4720      	.DB  0x53,0x45,0x4E,0x53,0x4F,0x52,0x20,0x47
000037 4d45
000038 4150
000039 4b00
00003a 6b65      	.DB  0x45,0x4D,0x50,0x41,0x0,0x4B,0x65,0x6B
00003b 6175
00003c 6174
00003d 206e
00003e 6567      	.DB  0x75,0x61,0x74,0x61,0x6E,0x20,0x67,0x65
00003f 706d
000040 3a61
000041 0020
000042 614d      	.DB  0x6D,0x70,0x61,0x3A,0x20,0x0,0x4D,0x61
000043 6e67
000044 7469
000045 6475
000046 006f      	.DB  0x67,0x6E,0x69,0x74,0x75,0x64,0x6F,0x0
000047 6f4b
000048 646e
000049 7369
00004a 2069      	.DB  0x4B,0x6F,0x6E,0x64,0x69,0x73,0x69,0x20
00004b 6d61
00004c 6e61
00004d 4c00
00004e 6e61      	.DB  0x61,0x6D,0x61,0x6E,0x0,0x4C,0x61,0x6E
00004f 756a
000050 6b74
000051 6e61
000052 7020      	.DB  0x6A,0x75,0x74,0x6B,0x61,0x6E,0x20,0x70
000053 6b65
000054 7265
000055 616a
000056 6e61      	.DB  0x65,0x6B,0x65,0x72,0x6A,0x61,0x61,0x6E
000057 4120
000058 646e
000059 2061
00005a 203a      	.DB  0x20,0x41,0x6E,0x64,0x61,0x20,0x3A,0x20
00005b 4700
00005c 6d65
00005d 6170
00005e 7420      	.DB  0x0,0x47,0x65,0x6D,0x70,0x61,0x20,0x74
00005f 7265
000060 616a
000061 6964
000062 202c      	.DB  0x65,0x72,0x6A,0x61,0x64,0x69,0x2C,0x20
000063 6553
000064 6567
000065 6172
000066 6d20      	.DB  0x53,0x65,0x67,0x65,0x72,0x61,0x20,0x6D
000067 6c65
000068 7261
000069 6b69
00006a 6e61      	.DB  0x65,0x6C,0x61,0x72,0x69,0x6B,0x61,0x6E
00006b 6420
00006c 7269
00006d 2069
00006e 656b      	.DB  0x20,0x64,0x69,0x72,0x69,0x20,0x6B,0x65
00006f 7420
000070 6d65
000071 6170
000072 2074      	.DB  0x20,0x74,0x65,0x6D,0x70,0x61,0x74,0x20
000073 6d61
000074 6e61
000075 5000
000076 6e69      	.DB  0x61,0x6D,0x61,0x6E,0x0,0x50,0x69,0x6E
000077 7574
000078 6b20
000079 6c65
00007a 6175      	.DB  0x74,0x75,0x20,0x6B,0x65,0x6C,0x75,0x61
00007b 2072
00007c 6574
00007d 616c
00007e 2068      	.DB  0x72,0x20,0x74,0x65,0x6C,0x61,0x68,0x20
00007f 6574
000080 6272
000081 6b75
000082 2061      	.DB  0x74,0x65,0x72,0x62,0x75,0x6B,0x61,0x20
000083 614a
000084 676e
000085 6e61
000086 5020      	.DB  0x4A,0x61,0x6E,0x67,0x61,0x6E,0x20,0x50
000087 6e61
000088 6b69
D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1480): warning: .cseg .db misalignment - padding zero byte
000089 0000      	.DB  0x61,0x6E,0x69,0x6B,0x0
                 _0x2000003:
00008a c080      	.DB  0x80,0xC0
                 _0x2020060:
D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1484): warning: .cseg .db misalignment - padding zero byte
00008b 0001      	.DB  0x1
                 _0x2020000:
00008c 4e2d
00008d 4e41
00008e 4900
00008f 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\tgs\AAutoSafety\Debug\List\Real AutoSafety.asm(1487): warning: .cseg .db misalignment - padding zero byte
000090 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000091 0002      	.DW  0x02
000092 0272      	.DW  __base_y_G100
000093 0114      	.DW  _0x2000003*2
                 
000094 0001      	.DW  0x01
000095 0276      	.DW  __seed_G101
000096 0116      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000097 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000098 94f8      	CLI
000099 27ee      	CLR  R30
00009a bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00009b e0f1      	LDI  R31,1
00009c bffb      	OUT  GICR,R31
00009d bfeb      	OUT  GICR,R30
00009e bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00009f e08d      	LDI  R24,(14-2)+1
0000a0 e0a2      	LDI  R26,2
0000a1 27bb      	CLR  R27
                 __CLEAR_REG:
0000a2 93ed      	ST   X+,R30
0000a3 958a      	DEC  R24
0000a4 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000a5 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000a6 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000a7 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000a8 93ed      	ST   X+,R30
0000a9 9701      	SBIW R24,1
0000aa f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000ab e2e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000ac e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000ad 9185      	LPM  R24,Z+
0000ae 9195      	LPM  R25,Z+
0000af 9700      	SBIW R24,0
0000b0 f061      	BREQ __GLOBAL_INI_END
0000b1 91a5      	LPM  R26,Z+
0000b2 91b5      	LPM  R27,Z+
0000b3 9005      	LPM  R0,Z+
0000b4 9015      	LPM  R1,Z+
0000b5 01bf      	MOVW R22,R30
0000b6 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000b7 9005      	LPM  R0,Z+
0000b8 920d      	ST   X+,R0
0000b9 9701      	SBIW R24,1
0000ba f7e1      	BRNE __GLOBAL_INI_LOOP
0000bb 01fb      	MOVW R30,R22
0000bc cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000bd e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000be bfed      	OUT  SPL,R30
0000bf e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000c0 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000c1 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000c2 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000c3 940c 00ed 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;unsigned char sensor_gempa(){
                 ; 0000 0020 unsigned char sensor_gempa(){
                 
                 	.CSEG
                 _sensor_gempa:
                 ; .FSTART _sensor_gempa
                 ; 0000 0021 count = 0;
0000c5 2444      	CLR  R4
0000c6 2455      	CLR  R5
                 ; 0000 0022 PORTB.6 =1;
0000c7 9ac6      	SBI  0x18,6
                 ; 0000 0023 delay_us(15);
                +
0000c8 e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0000c9 958a     +DEC R24
0000ca f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
                 ; 0000 0024 PORTB.6=0;
0000cb 98c6      	CBI  0x18,6
                 ; 0000 0025 delay_ms(2);
0000cc e0a2      	LDI  R26,LOW(2)
0000cd e0b0      	LDI  R27,0
0000ce d277      	RCALL _delay_ms
                 ; 0000 0026 while(PINB.7 ==0){}
                 _0x7:
0000cf 9bb7      	SBIS 0x16,7
0000d0 cffe      	RJMP _0x7
                 ; 0000 0027 while(PINB.7 ==1){
                 _0xA:
0000d1 9bb7      	SBIS 0x16,7
0000d2 c005      	RJMP _0xC
                 ; 0000 0028 count++;
0000d3 01f2      	MOVW R30,R4
0000d4 9631      	ADIW R30,1
0000d5 012f      	MOVW R4,R30
0000d6 9731      	SBIW R30,1
                 ; 0000 0029 }
0000d7 cff9      	RJMP _0xA
                 _0xC:
                 ; 0000 002A gmp=count*0.0036;
0000d8 01f2      	MOVW R30,R4
                +
0000d9 2f6f     +MOV R22 , R31
0000da 0f66     +ADD R22 , R22
0000db 0b66     +SBC R22 , R22
0000dc 2f76     +MOV R23 , R22
                 	__CWD1
0000dd d1ed      	RCALL __CDF1
                +
0000de efaa     +LDI R26 , LOW ( 0x3B6BEDFA )
0000df eebd     +LDI R27 , HIGH ( 0x3B6BEDFA )
0000e0 e68b     +LDI R24 , BYTE3 ( 0x3B6BEDFA )
0000e1 e39b     +LDI R25 , BYTE4 ( 0x3B6BEDFA )
                 	__GETD2N 0x3B6BEDFA
0000e2 d215      	RCALL __MULF12
0000e3 93e0 026e 	STS  _gmp,R30
0000e5 93f0 026f 	STS  _gmp+1,R31
0000e7 9360 0270 	STS  _gmp+2,R22
0000e9 9370 0271 	STS  _gmp+3,R23
                 ; 0000 002B return gmp;}
0000eb d1a6      	RCALL __CFD1U
0000ec 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 002E {
                 _main:
                 ; .FSTART _main
                 ; 0000 002F DDRB=0x00;
0000ed e0e0      	LDI  R30,LOW(0)
0000ee bbe7      	OUT  0x17,R30
                 ; 0000 0030 PORTB=0xC0;
0000ef ece0      	LDI  R30,LOW(192)
0000f0 bbe8      	OUT  0x18,R30
                 ; 0000 0031 
                 ; 0000 0032 DDRC=0xFF;
0000f1 efef      	LDI  R30,LOW(255)
0000f2 bbe4      	OUT  0x14,R30
                 ; 0000 0033 PORTC=0x03;
0000f3 e0e3      	LDI  R30,LOW(3)
0000f4 bbe5      	OUT  0x15,R30
                 ; 0000 0034 
                 ; 0000 0035 lcd_init(32);
0000f5 e2a0      	LDI  R26,LOW(32)
0000f6 d0cc      	RCALL _lcd_init
                 ; 0000 0036 
                 ; 0000 0037 while (1)
                 _0xD:
                 ; 0000 0038 {
                 ; 0000 0039 // Place your code here
                 ; 0000 003A gempa = sensor_gempa();
0000f7 dfcd      	RCALL _sensor_gempa
0000f8 e6aa      	LDI  R26,LOW(_gempa)
0000f9 e0b2      	LDI  R27,HIGH(_gempa)
0000fa 27ff      	CLR  R31
0000fb 2766      	CLR  R22
0000fc 2777      	CLR  R23
0000fd d1cd      	RCALL __CDF1
                +
0000fe 93ed     +ST X + , R30
0000ff 93fd     +ST X + , R31
000100 936d     +ST X + , R22
000101 937c     +ST X , R23
                 	__PUTDP1
                 ; 0000 003B lcd_clear();
000102 d119      	RCALL SUBOPT_0x0
                 ; 0000 003C lcd_gotoxy(0,0);
                 ; 0000 003D lcd_putsf("SENSOR GEMPA");
                +
000103 e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000104 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000105 d11b      	RCALL SUBOPT_0x1
                 ; 0000 003E lcd_gotoxy(0,1);
                 ; 0000 003F lcd_putsf("Kekuatan gempa: ");
                +
000106 e7a3     +LDI R26 , LOW ( 2 * _0x0 + ( 13 ) )
000107 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW2FN _0x0,13
000108 d0ab      	RCALL _lcd_putsf
                 ; 0000 0040 itoa (gempa, buff);
000109 91e0 026a 	LDS  R30,_gempa
00010b 91f0 026b 	LDS  R31,_gempa+1
00010d 9160 026c 	LDS  R22,_gempa+2
00010f 9170 026d 	LDS  R23,_gempa+3
000111 d182      	RCALL __CFD1
000112 93fa      	ST   -Y,R31
000113 93ea      	ST   -Y,R30
000114 e6a0      	LDI  R26,LOW(_buff)
000115 e0b2      	LDI  R27,HIGH(_buff)
000116 d0d7      	RCALL _itoa
                 ; 0000 0041 lcd_gotoxy(16,1);
000117 e1e0      	LDI  R30,LOW(16)
000118 93ea      	ST   -Y,R30
000119 e0a1      	LDI  R26,LOW(1)
00011a d05c      	RCALL _lcd_gotoxy
                 ; 0000 0042 lcd_puts (buff);
00011b e6a0      	LDI  R26,LOW(_buff)
00011c e0b2      	LDI  R27,HIGH(_buff)
00011d d089      	RCALL _lcd_puts
                 ; 0000 0043 lcd_gotoxy(18,1);
00011e e1e2      	LDI  R30,LOW(18)
00011f 93ea      	ST   -Y,R30
000120 e0a1      	LDI  R26,LOW(1)
000121 d055      	RCALL _lcd_gotoxy
                 ; 0000 0044 lcd_putsf("Magnitudo");
                +
000122 e8a4     +LDI R26 , LOW ( 2 * _0x0 + ( 30 ) )
000123 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 30 ) )
                 	__POINTW2FN _0x0,30
000124 d08f      	RCALL _lcd_putsf
                 ; 0000 0045 delay_ms(200);
000125 eca8      	LDI  R26,LOW(200)
000126 e0b0      	LDI  R27,0
000127 d21e      	RCALL _delay_ms
                 ; 0000 0046 if (gempa <= 0){
000128 d0fd      	RCALL SUBOPT_0x2
000129 f064      	BRLT _0x10
                 ; 0000 0047 lcd_clear();
00012a d05e      	RCALL _lcd_clear
                 ; 0000 0048 PORTC.0 =1;
00012b 9aa8      	SBI  0x15,0
                 ; 0000 0049 PORTC.1 =0;
00012c 98a9      	CBI  0x15,1
                 ; 0000 004A PORTC.2=0;
00012d 98aa      	CBI  0x15,2
                 ; 0000 004B 
                 ; 0000 004C lcd_clear();
00012e d0ed      	RCALL SUBOPT_0x0
                 ; 0000 004D lcd_gotoxy(0,0);
                 ; 0000 004E lcd_putsf("Kondisi aman");
                +
00012f e8ae     +LDI R26 , LOW ( 2 * _0x0 + ( 40 ) )
000130 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 40 ) )
                 	__POINTW2FN _0x0,40
000131 d0ef      	RCALL SUBOPT_0x1
                 ; 0000 004F lcd_gotoxy(0,1);
                 ; 0000 0050 lcd_putsf("Lanjutkan pekerjaan Anda : ");
                +
000132 e9ab     +LDI R26 , LOW ( 2 * _0x0 + ( 53 ) )
000133 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 53 ) )
                 	__POINTW2FN _0x0,53
000134 d0fb      	RCALL SUBOPT_0x3
                 ; 0000 0051 delay_ms(100);
                 ; 0000 0052 }
                 ; 0000 0053 
                 ; 0000 0054 else if(gempa>0)
000135 c01d      	RJMP _0x17
                 _0x10:
000136 d0ef      	RCALL SUBOPT_0x2
000137 f4bc      	BRGE _0x18
                 ; 0000 0055 {
                 ; 0000 0056 lcd_clear();
000138 d050      	RCALL _lcd_clear
                 ; 0000 0057 lcd_putsf("Gempa terjadi, Segera melarikan diri ke tempat aman");
                +
000139 eba7     +LDI R26 , LOW ( 2 * _0x0 + ( 81 ) )
00013a e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 81 ) )
                 	__POINTW2FN _0x0,81
00013b d0f4      	RCALL SUBOPT_0x3
                 ; 0000 0058 delay_ms(100);
                 ; 0000 0059 lcd_clear();
00013c d04c      	RCALL _lcd_clear
                 ; 0000 005A lcd_putsf("Pintu keluar telah terbuka Jangan Panik");
                +
00013d eeab     +LDI R26 , LOW ( 2 * _0x0 + ( 133 ) )
00013e e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 133 ) )
                 	__POINTW2FN _0x0,133
00013f d074      	RCALL _lcd_putsf
                 ; 0000 005B PORTC.0=0;
000140 98a8      	CBI  0x15,0
                 ; 0000 005C PORTC.1=1;
000141 d0f2      	RCALL SUBOPT_0x4
                 ; 0000 005D delay_ms(16);
                 ; 0000 005E PORTC.1=0;
                 ; 0000 005F delay_ms(16);
                 ; 0000 0060 PORTC.1=1;
000142 d0f1      	RCALL SUBOPT_0x4
                 ; 0000 0061 delay_ms(16);
                 ; 0000 0062 PORTC.1=0;
                 ; 0000 0063 delay_ms(16);
                 ; 0000 0064 PORTC.1=1;
000143 d0f0      	RCALL SUBOPT_0x4
                 ; 0000 0065 delay_ms(16);
                 ; 0000 0066 PORTC.1=0;
                 ; 0000 0067 delay_ms(16);
                 ; 0000 0068 PORTC.1=0;
000144 98a9      	CBI  0x15,1
                 ; 0000 0069 delay_ms(16);
000145 e1a0      	LDI  R26,LOW(16)
000146 e0b0      	LDI  R27,0
000147 d1fe      	RCALL _delay_ms
                 ; 0000 006A PORTC.1=1;
000148 d0eb      	RCALL SUBOPT_0x4
                 ; 0000 006B delay_ms(16);
                 ; 0000 006C PORTC.1=0;
                 ; 0000 006D delay_ms(16);
                 ; 0000 006E PORTC.2=1;
000149 9aaa      	SBI  0x15,2
                 ; 0000 006F lcd_gotoxy(0,0);
00014a e0e0      	LDI  R30,LOW(0)
00014b 93ea      	ST   -Y,R30
00014c e0a0      	LDI  R26,LOW(0)
00014d d029      	RCALL _lcd_gotoxy
                 ; 0000 0070 
                 ; 0000 0071 
                 ; 0000 0072 }
                 ; 0000 0073 else {
00014e c004      	RJMP _0x2F
                 _0x18:
                 ; 0000 0074 PORTC.0=0;
00014f 98a8      	CBI  0x15,0
                 ; 0000 0075 PORTC.1=0;
000150 98a9      	CBI  0x15,1
                 ; 0000 0076 PORTC.2=0;
000151 98aa      	CBI  0x15,2
                 ; 0000 0077 lcd_clear();}
000152 d036      	RCALL _lcd_clear
                 _0x2F:
                 _0x17:
                 ; 0000 0078 }
000153 cfa3      	RJMP _0xD
                 ; 0000 0079 }
                 _0x36:
000154 cfff      	RJMP _0x36
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000155 931a      	ST   -Y,R17
000156 2f1a      	MOV  R17,R26
000157 b3e2      	IN   R30,0x12
000158 70ef      	ANDI R30,LOW(0xF)
000159 2fae      	MOV  R26,R30
00015a 2fe1      	MOV  R30,R17
00015b 7fe0      	ANDI R30,LOW(0xF0)
00015c 2bea      	OR   R30,R26
00015d bbe2      	OUT  0x12,R30
                +
00015e e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00015f 958a     +DEC R24
000160 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000161 9a92      	SBI  0x12,2
                +
000162 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000163 958a     +DEC R24
000164 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000165 9892      	CBI  0x12,2
                +
000166 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000167 958a     +DEC R24
000168 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000169 c082      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00016a 93aa      	ST   -Y,R26
00016b 81a8      	LD   R26,Y
00016c dfe8      	RCALL __lcd_write_nibble_G100
00016d 81e8          ld    r30,y
00016e 95e2          swap  r30
00016f 83e8          st    y,r30
000170 81a8      	LD   R26,Y
000171 dfe3      	RCALL __lcd_write_nibble_G100
                +
000172 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000173 958a     +DEC R24
000174 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000175 9621      	ADIW R28,1
000176 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000177 931a      	ST   -Y,R17
000178 930a      	ST   -Y,R16
000179 2f1a      	MOV  R17,R26
00017a 810a      	LDD  R16,Y+2
00017b 2fe1      	MOV  R30,R17
00017c e0f0      	LDI  R31,0
00017d 58ee      	SUBI R30,LOW(-__base_y_G100)
00017e 4ffd      	SBCI R31,HIGH(-__base_y_G100)
00017f 81e0      	LD   R30,Z
000180 0fe0      	ADD  R30,R16
000181 2fae      	MOV  R26,R30
000182 dfe7      	RCALL __lcd_write_data
000183 2e70      	MOV  R7,R16
000184 2e61      	MOV  R6,R17
000185 8119      	LDD  R17,Y+1
000186 8108      	LDD  R16,Y+0
000187 9623      	ADIW R28,3
000188 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000189 e0a2      	LDI  R26,LOW(2)
00018a d0b1      	RCALL SUBOPT_0x5
00018b e0ac      	LDI  R26,LOW(12)
00018c dfdd      	RCALL __lcd_write_data
00018d e0a1      	LDI  R26,LOW(1)
00018e d0ad      	RCALL SUBOPT_0x5
00018f e0e0      	LDI  R30,LOW(0)
000190 2e6e      	MOV  R6,R30
000191 2e7e      	MOV  R7,R30
000192 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000193 931a      	ST   -Y,R17
000194 2f1a      	MOV  R17,R26
000195 301a      	CPI  R17,10
000196 f011      	BREQ _0x2000005
000197 1479      	CP   R7,R9
000198 f040      	BRLO _0x2000004
                 _0x2000005:
000199 e0e0      	LDI  R30,LOW(0)
00019a 93ea      	ST   -Y,R30
00019b 9463      	INC  R6
00019c 2da6      	MOV  R26,R6
00019d dfd9      	RCALL _lcd_gotoxy
00019e 301a      	CPI  R17,10
00019f f409      	BRNE _0x2000007
0001a0 c04b      	RJMP _0x20C0001
                 _0x2000007:
                 _0x2000004:
0001a1 9473      	INC  R7
0001a2 9a90      	SBI  0x12,0
0001a3 2fa1      	MOV  R26,R17
0001a4 dfc5      	RCALL __lcd_write_data
0001a5 9890      	CBI  0x12,0
0001a6 c045      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001a7 d09f      	RCALL __SAVELOCR4
0001a8 019d      	MOVW R18,R26
                 _0x2000008:
0001a9 01d9      	MOVW R26,R18
                +
0001aa 5f2f     +SUBI R18 , LOW ( - 1 )
0001ab 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001ac 91ec      	LD   R30,X
0001ad 2f1e      	MOV  R17,R30
0001ae 30e0      	CPI  R30,0
0001af f019      	BREQ _0x200000A
0001b0 2fa1      	MOV  R26,R17
0001b1 dfe1      	RCALL _lcd_putchar
0001b2 cff6      	RJMP _0x2000008
                 _0x200000A:
0001b3 c00c      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001b4 d092      	RCALL __SAVELOCR4
0001b5 019d      	MOVW R18,R26
                 _0x200000B:
0001b6 01f9      	MOVW R30,R18
                +
0001b7 5f2f     +SUBI R18 , LOW ( - 1 )
0001b8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001b9 91e4      	LPM  R30,Z
0001ba 2f1e      	MOV  R17,R30
0001bb 30e0      	CPI  R30,0
0001bc f019      	BREQ _0x200000D
0001bd 2fa1      	MOV  R26,R17
0001be dfd4      	RCALL _lcd_putchar
0001bf cff6      	RJMP _0x200000B
                 _0x200000D:
                 _0x20C0002:
0001c0 d08b      	RCALL __LOADLOCR4
0001c1 9624      	ADIW R28,4
0001c2 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001c3 931a      	ST   -Y,R17
0001c4 2f1a      	MOV  R17,R26
0001c5 b3e1      	IN   R30,0x11
0001c6 6fe0      	ORI  R30,LOW(0xF0)
0001c7 bbe1      	OUT  0x11,R30
0001c8 9a8a      	SBI  0x11,2
0001c9 9a88      	SBI  0x11,0
0001ca 9a89      	SBI  0x11,1
0001cb 9892      	CBI  0x12,2
0001cc 9890      	CBI  0x12,0
0001cd 9891      	CBI  0x12,1
0001ce 2e91      	MOV  R9,R17
0001cf 2fe1      	MOV  R30,R17
0001d0 58e0      	SUBI R30,-LOW(128)
                +
0001d1 93e0 0274+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001d3 2fe1      	MOV  R30,R17
0001d4 54e0      	SUBI R30,-LOW(192)
                +
0001d5 93e0 0275+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001d7 e1a4      	LDI  R26,LOW(20)
0001d8 e0b0      	LDI  R27,0
0001d9 d16c      	RCALL _delay_ms
0001da d065      	RCALL SUBOPT_0x6
0001db d064      	RCALL SUBOPT_0x6
0001dc d063      	RCALL SUBOPT_0x6
0001dd e2a0      	LDI  R26,LOW(32)
0001de df76      	RCALL __lcd_write_nibble_G100
                +
0001df ec88     +LDI R24 , LOW ( 200 )
0001e0 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001e1 9701     +SBIW R24 , 1
0001e2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001e3 e2a8      	LDI  R26,LOW(40)
0001e4 df85      	RCALL __lcd_write_data
0001e5 e0a4      	LDI  R26,LOW(4)
0001e6 df83      	RCALL __lcd_write_data
0001e7 e8a5      	LDI  R26,LOW(133)
0001e8 df81      	RCALL __lcd_write_data
0001e9 e0a6      	LDI  R26,LOW(6)
0001ea df7f      	RCALL __lcd_write_data
0001eb df9d      	RCALL _lcd_clear
                 _0x20C0001:
0001ec 9119      	LD   R17,Y+
0001ed 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0001ee 93ba      	ST   -Y,R27
0001ef 93aa      	ST   -Y,R26
0001f0 91a9          ld   r26,y+
0001f1 91b9          ld   r27,y+
0001f2 91e9          ld   r30,y+
0001f3 91f9          ld   r31,y+
0001f4 9630          adiw r30,0
0001f5 f42a          brpl __itoa0
0001f6 95e0          com  r30
0001f7 95f0          com  r31
0001f8 9631          adiw r30,1
0001f9 e26d          ldi  r22,'-'
0001fa 936d          st   x+,r22
                 __itoa0:
0001fb 94e8          clt
0001fc e180          ldi  r24,low(10000)
0001fd e297          ldi  r25,high(10000)
0001fe d00d          rcall __itoa1
0001ff ee88          ldi  r24,low(1000)
000200 e093          ldi  r25,high(1000)
000201 d00a          rcall __itoa1
000202 e684          ldi  r24,100
000203 2799          clr  r25
000204 d007          rcall __itoa1
000205 e08a          ldi  r24,10
000206 d005          rcall __itoa1
000207 2f6e          mov  r22,r30
000208 d010          rcall __itoa5
000209 2766          clr  r22
00020a 936c          st   x,r22
00020b 9508          ret
                 
                 __itoa1:
00020c 2766          clr	 r22
                 __itoa2:
00020d 17e8          cp   r30,r24
00020e 07f9          cpc  r31,r25
00020f f020          brlo __itoa3
000210 9563          inc  r22
000211 1be8          sub  r30,r24
000212 0bf9          sbc  r31,r25
000213 f7c9          brne __itoa2
                 __itoa3:
000214 2366          tst  r22
000215 f411          brne __itoa4
000216 f016          brts __itoa5
000217 9508          ret
                 __itoa4:
000218 9468          set
                 __itoa5:
000219 5d60          subi r22,-0x30
00021a 936d          st   x+,r22
00021b 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _buff:
000260           	.BYTE 0xA
                 _gempa:
00026a           	.BYTE 0x4
                 _gmp:
00026e           	.BYTE 0x4
                 __base_y_G100:
000272           	.BYTE 0x4
                 __seed_G101:
000276           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
00021c df6c      	RCALL _lcd_clear
00021d e0e0      	LDI  R30,LOW(0)
00021e 93ea      	ST   -Y,R30
00021f e0a0      	LDI  R26,LOW(0)
000220 cf56      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000221 df92      	RCALL _lcd_putsf
000222 e0e0      	LDI  R30,LOW(0)
000223 93ea      	ST   -Y,R30
000224 e0a1      	LDI  R26,LOW(1)
000225 cf51      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
000226 91a0 026a 	LDS  R26,_gempa
000228 91b0 026b 	LDS  R27,_gempa+1
00022a 9180 026c 	LDS  R24,_gempa+2
00022c 9190 026d 	LDS  R25,_gempa+3
00022e d030      	RCALL __CPD02
00022f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000230 df83      	RCALL _lcd_putsf
000231 e6a4      	LDI  R26,LOW(100)
000232 e0b0      	LDI  R27,0
000233 c112      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x4:
000234 9aa9      	SBI  0x15,1
000235 e1a0      	LDI  R26,LOW(16)
000236 e0b0      	LDI  R27,0
000237 d10e      	RCALL _delay_ms
000238 98a9      	CBI  0x15,1
000239 e1a0      	LDI  R26,LOW(16)
00023a e0b0      	LDI  R27,0
00023b c10a      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
00023c df2d      	RCALL __lcd_write_data
00023d e0a3      	LDI  R26,LOW(3)
00023e e0b0      	LDI  R27,0
00023f c106      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6:
000240 e3a0      	LDI  R26,LOW(48)
000241 df13      	RCALL __lcd_write_nibble_G100
                +
000242 ec88     +LDI R24 , LOW ( 200 )
000243 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000244 9701     +SBIW R24 , 1
000245 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000246 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR4:
000247 933a      	ST   -Y,R19
                 __SAVELOCR3:
000248 932a      	ST   -Y,R18
                 __SAVELOCR2:
000249 931a      	ST   -Y,R17
00024a 930a      	ST   -Y,R16
00024b 9508      	RET
                 
                 __LOADLOCR4:
00024c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00024d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00024e 8119      	LDD  R17,Y+1
00024f 8108      	LD   R16,Y
000250 9508      	RET
                 
                 __ANEGD1:
000251 95f0      	COM  R31
000252 9560      	COM  R22
000253 9570      	COM  R23
000254 95e1      	NEG  R30
000255 4fff      	SBCI R31,-1
000256 4f6f      	SBCI R22,-1
000257 4f7f      	SBCI R23,-1
000258 9508      	RET
                 
                 __CBD1:
000259 2ffe      	MOV  R31,R30
00025a 0fff      	ADD  R31,R31
00025b 0bff      	SBC  R31,R31
00025c 2f6f      	MOV  R22,R31
00025d 2f7f      	MOV  R23,R31
00025e 9508      	RET
                 
                 __CPD02:
00025f 2400      	CLR  R0
000260 160a      	CP   R0,R26
000261 060b      	CPC  R0,R27
000262 0608      	CPC  R0,R24
000263 0609      	CPC  R0,R25
000264 9508      	RET
                 
                 __ROUND_REPACK:
000265 2355      	TST  R21
000266 f442      	BRPL __REPACK
000267 3850      	CPI  R21,0x80
000268 f411      	BRNE __ROUND_REPACK0
000269 ffe0      	SBRS R30,0
00026a c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00026b 9631      	ADIW R30,1
00026c 1f69      	ADC  R22,R25
00026d 1f79      	ADC  R23,R25
00026e f06b      	BRVS __REPACK1
                 
                 __REPACK:
00026f e850      	LDI  R21,0x80
000270 2757      	EOR  R21,R23
000271 f411      	BRNE __REPACK0
000272 935f      	PUSH R21
000273 c073      	RJMP __ZERORES
                 __REPACK0:
000274 3f5f      	CPI  R21,0xFF
000275 f031      	BREQ __REPACK1
000276 0f66      	LSL  R22
000277 0c00      	LSL  R0
000278 9557      	ROR  R21
000279 9567      	ROR  R22
00027a 2f75      	MOV  R23,R21
00027b 9508      	RET
                 __REPACK1:
00027c 935f      	PUSH R21
00027d 2000      	TST  R0
00027e f00a      	BRMI __REPACK2
00027f c072      	RJMP __MAXRES
                 __REPACK2:
000280 c06b      	RJMP __MINRES
                 
                 __UNPACK:
000281 e850      	LDI  R21,0x80
000282 2e19      	MOV  R1,R25
000283 2215      	AND  R1,R21
000284 0f88      	LSL  R24
000285 1f99      	ROL  R25
000286 2795      	EOR  R25,R21
000287 0f55      	LSL  R21
000288 9587      	ROR  R24
                 
                 __UNPACK1:
000289 e850      	LDI  R21,0x80
00028a 2e07      	MOV  R0,R23
00028b 2205      	AND  R0,R21
00028c 0f66      	LSL  R22
00028d 1f77      	ROL  R23
00028e 2775      	EOR  R23,R21
00028f 0f55      	LSL  R21
000290 9567      	ROR  R22
000291 9508      	RET
                 
                 __CFD1U:
000292 9468      	SET
000293 c001      	RJMP __CFD1U0
                 __CFD1:
000294 94e8      	CLT
                 __CFD1U0:
000295 935f      	PUSH R21
000296 dff2      	RCALL __UNPACK1
000297 3870      	CPI  R23,0x80
000298 f018      	BRLO __CFD10
000299 3f7f      	CPI  R23,0xFF
00029a f408      	BRCC __CFD10
00029b c04b      	RJMP __ZERORES
                 __CFD10:
00029c e156      	LDI  R21,22
00029d 1b57      	SUB  R21,R23
00029e f4aa      	BRPL __CFD11
00029f 9551      	NEG  R21
0002a0 3058      	CPI  R21,8
0002a1 f40e      	BRTC __CFD19
0002a2 3059      	CPI  R21,9
                 __CFD19:
0002a3 f030      	BRLO __CFD17
0002a4 efef      	SER  R30
0002a5 efff      	SER  R31
0002a6 ef6f      	SER  R22
0002a7 e77f      	LDI  R23,0x7F
0002a8 f977      	BLD  R23,7
0002a9 c01a      	RJMP __CFD15
                 __CFD17:
0002aa 2777      	CLR  R23
0002ab 2355      	TST  R21
0002ac f0b9      	BREQ __CFD15
                 __CFD18:
0002ad 0fee      	LSL  R30
0002ae 1fff      	ROL  R31
0002af 1f66      	ROL  R22
0002b0 1f77      	ROL  R23
0002b1 955a      	DEC  R21
0002b2 f7d1      	BRNE __CFD18
0002b3 c010      	RJMP __CFD15
                 __CFD11:
0002b4 2777      	CLR  R23
                 __CFD12:
0002b5 3058      	CPI  R21,8
0002b6 f028      	BRLO __CFD13
0002b7 2fef      	MOV  R30,R31
0002b8 2ff6      	MOV  R31,R22
0002b9 2f67      	MOV  R22,R23
0002ba 5058      	SUBI R21,8
0002bb cff9      	RJMP __CFD12
                 __CFD13:
0002bc 2355      	TST  R21
0002bd f031      	BREQ __CFD15
                 __CFD14:
0002be 9576      	LSR  R23
0002bf 9567      	ROR  R22
0002c0 95f7      	ROR  R31
0002c1 95e7      	ROR  R30
0002c2 955a      	DEC  R21
0002c3 f7d1      	BRNE __CFD14
                 __CFD15:
0002c4 2000      	TST  R0
0002c5 f40a      	BRPL __CFD16
0002c6 df8a      	RCALL __ANEGD1
                 __CFD16:
0002c7 915f      	POP  R21
0002c8 9508      	RET
                 
                 __CDF1U:
0002c9 9468      	SET
0002ca c001      	RJMP __CDF1U0
                 __CDF1:
0002cb 94e8      	CLT
                 __CDF1U0:
0002cc 9730      	SBIW R30,0
0002cd 4060      	SBCI R22,0
0002ce 4070      	SBCI R23,0
0002cf f0b1      	BREQ __CDF10
0002d0 2400      	CLR  R0
0002d1 f026      	BRTS __CDF11
0002d2 2377      	TST  R23
0002d3 f412      	BRPL __CDF11
0002d4 9400      	COM  R0
0002d5 df7b      	RCALL __ANEGD1
                 __CDF11:
0002d6 2e17      	MOV  R1,R23
0002d7 e17e      	LDI  R23,30
0002d8 2011      	TST  R1
                 __CDF12:
0002d9 f032      	BRMI __CDF13
0002da 957a      	DEC  R23
0002db 0fee      	LSL  R30
0002dc 1fff      	ROL  R31
0002dd 1f66      	ROL  R22
0002de 1c11      	ROL  R1
0002df cff9      	RJMP __CDF12
                 __CDF13:
0002e0 2fef      	MOV  R30,R31
0002e1 2ff6      	MOV  R31,R22
0002e2 2d61      	MOV  R22,R1
0002e3 935f      	PUSH R21
0002e4 df8a      	RCALL __REPACK
0002e5 915f      	POP  R21
                 __CDF10:
0002e6 9508      	RET
                 
                 __ZERORES:
0002e7 27ee      	CLR  R30
0002e8 27ff      	CLR  R31
0002e9 01bf      	MOVW R22,R30
0002ea 915f      	POP  R21
0002eb 9508      	RET
                 
                 __MINRES:
0002ec efef      	SER  R30
0002ed efff      	SER  R31
0002ee e76f      	LDI  R22,0x7F
0002ef ef7f      	SER  R23
0002f0 915f      	POP  R21
0002f1 9508      	RET
                 
                 __MAXRES:
0002f2 efef      	SER  R30
0002f3 efff      	SER  R31
0002f4 e76f      	LDI  R22,0x7F
0002f5 e77f      	LDI  R23,0x7F
0002f6 915f      	POP  R21
0002f7 9508      	RET
                 
                 __MULF12:
0002f8 935f      	PUSH R21
0002f9 df87      	RCALL __UNPACK
0002fa 3870      	CPI  R23,0x80
0002fb f359      	BREQ __ZERORES
0002fc 3890      	CPI  R25,0x80
0002fd f349      	BREQ __ZERORES
0002fe 2401      	EOR  R0,R1
0002ff 9408      	SEC
000300 1f79      	ADC  R23,R25
000301 f423      	BRVC __MULF124
000302 f324      	BRLT __ZERORES
                 __MULF125:
000303 2000      	TST  R0
000304 f33a      	BRMI __MINRES
000305 cfec      	RJMP __MAXRES
                 __MULF124:
000306 920f      	PUSH R0
000307 931f      	PUSH R17
000308 932f      	PUSH R18
000309 933f      	PUSH R19
00030a 934f      	PUSH R20
00030b 2711      	CLR  R17
00030c 2722      	CLR  R18
00030d 2799      	CLR  R25
00030e 9f68      	MUL  R22,R24
00030f 01a0      	MOVW R20,R0
000310 9f8f      	MUL  R24,R31
000311 2d30      	MOV  R19,R0
000312 0d41      	ADD  R20,R1
000313 1f59      	ADC  R21,R25
000314 9f6b      	MUL  R22,R27
000315 0d30      	ADD  R19,R0
000316 1d41      	ADC  R20,R1
000317 1f59      	ADC  R21,R25
000318 9f8e      	MUL  R24,R30
000319 d027      	RCALL __MULF126
00031a 9fbf      	MUL  R27,R31
00031b d025      	RCALL __MULF126
00031c 9f6a      	MUL  R22,R26
00031d d023      	RCALL __MULF126
00031e 9fbe      	MUL  R27,R30
00031f d01d      	RCALL __MULF127
000320 9faf      	MUL  R26,R31
000321 d01b      	RCALL __MULF127
000322 9fae      	MUL  R26,R30
000323 0d11      	ADD  R17,R1
000324 1f29      	ADC  R18,R25
000325 1f39      	ADC  R19,R25
000326 1f49      	ADC  R20,R25
000327 1f59      	ADC  R21,R25
000328 2fe3      	MOV  R30,R19
000329 2ff4      	MOV  R31,R20
00032a 2f65      	MOV  R22,R21
00032b 2f52      	MOV  R21,R18
00032c 914f      	POP  R20
00032d 913f      	POP  R19
00032e 912f      	POP  R18
00032f 911f      	POP  R17
000330 900f      	POP  R0
000331 2366      	TST  R22
000332 f02a      	BRMI __MULF122
000333 0f55      	LSL  R21
000334 1fee      	ROL  R30
000335 1fff      	ROL  R31
000336 1f66      	ROL  R22
000337 c002      	RJMP __MULF123
                 __MULF122:
000338 9573      	INC  R23
000339 f24b      	BRVS __MULF125
                 __MULF123:
00033a df2a      	RCALL __ROUND_REPACK
00033b 915f      	POP  R21
00033c 9508      	RET
                 
                 __MULF127:
00033d 0d10      	ADD  R17,R0
00033e 1d21      	ADC  R18,R1
00033f 1f39      	ADC  R19,R25
000340 c002      	RJMP __MULF128
                 __MULF126:
000341 0d20      	ADD  R18,R0
000342 1d31      	ADC  R19,R1
                 __MULF128:
000343 1f49      	ADC  R20,R25
000344 1f59      	ADC  R21,R25
000345 9508      	RET
                 
                 _delay_ms:
000346 9610      	adiw r26,0
000347 f039      	breq __delay_ms1
                 __delay_ms0:
000348 95a8      	wdr
                +
000349 ed80     +LDI R24 , LOW ( 0x7D0 )
00034a e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00034b 9701     +SBIW R24 , 1
00034c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00034d 9711      	sbiw r26,1
00034e f7c9      	brne __delay_ms0
                 __delay_ms1:
00034f 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  25 r1 :  13 r2 :   0 r3 :   0 r4 :   4 r5 :   1 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   7 r17:  30 r18:  15 r19:  12 r20:   8 r21:  44 r22:  48 r23:  34 
r24:  37 r25:  30 r26:  63 r27:  28 r28:   4 r29:   1 r30: 104 r31:  40 
x  :  11 y  :  36 z  :   9 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  15 add   :   8 
adiw  :   8 and   :   2 andi  :   2 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  11 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   5 
brlt  :   2 brmi  :   4 brne  :  19 brpl  :   5 brsh  :   0 brtc  :   1 
brts  :   2 brvc  :   1 brvs  :   2 bset  :   0 bst   :   0 call  :   0 
cbi   :  14 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   6 
cp    :   3 cpc   :   4 cpi   :  13 cpse  :   0 dec   :   9 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   4 jmp   :  22 ld    :  11 ldd   :   6 ldi   : 106 
lds   :   8 lpm   :   9 lsl   :   9 lsr   :   1 mov   :  42 movw  :  12 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   1 out   :  12 pop   :  11 push  :  10 rcall :  80 ret   :  26 
reti  :   0 rjmp  :  33 rol   :  11 ror   :   7 sbc   :   3 sbci  :   8 
sbi   :   9 sbic  :   0 sbis  :   2 sbiw  :   9 sbr   :   0 sbrc  :   0 
sbrs  :   1 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  31 std   :   0 sts   :   6 sub   :   2 subi  :   7 swap  :   1 
tst   :  10 wdr   :   1 
Instructions used: 68 out of 116 (58.6%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006a0   1476    220   1696   32768   5.2%
[.dseg] 0x000060 0x00027a      0     26     26    2048   1.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 8 warnings
