
AVRASM ver. 2.1.30  D:\tgs\gema\Debug\List\gema.asm Fri May 19 09:56:34 2023

D:\tgs\gema\Debug\List\gema.asm(1417): warning: Register r4 already defined by the .DEF directive
D:\tgs\gema\Debug\List\gema.asm(1418): warning: Register r5 already defined by the .DEF directive
D:\tgs\gema\Debug\List\gema.asm(1419): warning: Register r7 already defined by the .DEF directive
D:\tgs\gema\Debug\List\gema.asm(1420): warning: Register r6 already defined by the .DEF directive
D:\tgs\gema\Debug\List\gema.asm(1421): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _count=R4
                 	.DEF _count_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0085 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4553
000034 534e
000035 524f
000036 4720      	.DB  0x53,0x45,0x4E,0x53,0x4F,0x52,0x20,0x47
000037 4d45
000038 4150
000039 4b00
00003a 6b65      	.DB  0x45,0x4D,0x50,0x41,0x0,0x4B,0x65,0x6B
00003b 6175
00003c 6174
00003d 206e
00003e 6567      	.DB  0x75,0x61,0x74,0x61,0x6E,0x20,0x67,0x65
00003f 706d
000040 3a61
000041 0020
000042 614d      	.DB  0x6D,0x70,0x61,0x3A,0x20,0x0,0x4D,0x61
000043 6e67
000044 7469
000045 6475
000046 006f      	.DB  0x67,0x6E,0x69,0x74,0x75,0x64,0x6F,0x0
000047 6f4b
000048 646e
000049 7369
00004a 2069      	.DB  0x4B,0x6F,0x6E,0x64,0x69,0x73,0x69,0x20
00004b 6d61
00004c 6e61
00004d 4c00
00004e 6e61      	.DB  0x61,0x6D,0x61,0x6E,0x0,0x4C,0x61,0x6E
00004f 756a
000050 6b74
000051 6e61
000052 7020      	.DB  0x6A,0x75,0x74,0x6B,0x61,0x6E,0x20,0x70
000053 6b65
000054 7265
000055 616a
000056 6e61      	.DB  0x65,0x6B,0x65,0x72,0x6A,0x61,0x61,0x6E
000057 4120
000058 646e
000059 2061
00005a 203a      	.DB  0x20,0x41,0x6E,0x64,0x61,0x20,0x3A,0x20
00005b 4700
00005c 6d65
00005d 6170
00005e 7420      	.DB  0x0,0x47,0x65,0x6D,0x70,0x61,0x20,0x74
00005f 7265
000060 616a
000061 6964
000062 5300      	.DB  0x65,0x72,0x6A,0x61,0x64,0x69,0x0,0x53
000063 6765
000064 7265
000065 2061
000066 656d      	.DB  0x65,0x67,0x65,0x72,0x61,0x20,0x6D,0x65
000067 616c
000068 6972
000069 616b
00006a 206e      	.DB  0x6C,0x61,0x72,0x69,0x6B,0x61,0x6E,0x20
00006b 6964
00006c 6972
00006d 6b20
00006e 2065      	.DB  0x64,0x69,0x72,0x69,0x20,0x6B,0x65,0x20
00006f 6574
000070 706d
000071 7461
000072 6120      	.DB  0x74,0x65,0x6D,0x70,0x61,0x74,0x20,0x61
000073 616d
000074 206e
000075 203a
D:\tgs\gema\Debug\List\gema.asm(1475): warning: .cseg .db misalignment - padding zero byte
000076 0000      	.DB  0x6D,0x61,0x6E,0x20,0x3A,0x20,0x0
                 _0x2000003:
000077 c080      	.DB  0x80,0xC0
                 _0x2020060:
D:\tgs\gema\Debug\List\gema.asm(1479): warning: .cseg .db misalignment - padding zero byte
000078 0001      	.DB  0x1
                 _0x2020000:
000079 4e2d
00007a 4e41
00007b 4900
00007c 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\tgs\gema\Debug\List\gema.asm(1482): warning: .cseg .db misalignment - padding zero byte
00007d 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00007e 0002      	.DW  0x02
00007f 0272      	.DW  __base_y_G100
000080 00ee      	.DW  _0x2000003*2
                 
000081 0001      	.DW  0x01
000082 0276      	.DW  __seed_G101
000083 00f0      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000084 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000085 94f8      	CLI
000086 27ee      	CLR  R30
000087 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000088 e0f1      	LDI  R31,1
000089 bffb      	OUT  GICR,R31
00008a bfeb      	OUT  GICR,R30
00008b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00008c e08d      	LDI  R24,(14-2)+1
00008d e0a2      	LDI  R26,2
00008e 27bb      	CLR  R27
                 __CLEAR_REG:
00008f 93ed      	ST   X+,R30
000090 958a      	DEC  R24
000091 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000092 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000093 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000094 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000095 93ed      	ST   X+,R30
000096 9701      	SBIW R24,1
000097 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000098 efec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000099 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00009a 9185      	LPM  R24,Z+
00009b 9195      	LPM  R25,Z+
00009c 9700      	SBIW R24,0
00009d f061      	BREQ __GLOBAL_INI_END
00009e 91a5      	LPM  R26,Z+
00009f 91b5      	LPM  R27,Z+
0000a0 9005      	LPM  R0,Z+
0000a1 9015      	LPM  R1,Z+
0000a2 01bf      	MOVW R22,R30
0000a3 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000a4 9005      	LPM  R0,Z+
0000a5 920d      	ST   X+,R0
0000a6 9701      	SBIW R24,1
0000a7 f7e1      	BRNE __GLOBAL_INI_LOOP
0000a8 01fb      	MOVW R30,R22
0000a9 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000aa e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ab bfed      	OUT  SPL,R30
0000ac e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000ad bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000ae e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000af e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000b0 940c 00da 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;unsigned char sensor_jarak(){
                 ; 0000 0020 unsigned char sensor_jarak(){
                 
                 	.CSEG
                 _sensor_jarak:
                 ; .FSTART _sensor_jarak
                 ; 0000 0021 count = 0;
0000b2 2444      	CLR  R4
0000b3 2455      	CLR  R5
                 ; 0000 0022 PORTB.6 =1;
0000b4 9ac6      	SBI  0x18,6
                 ; 0000 0023 delay_us(15);
                +
0000b5 e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0000b6 958a     +DEC R24
0000b7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
                 ; 0000 0024 PORTB.6=0;
0000b8 98c6      	CBI  0x18,6
                 ; 0000 0025 delay_ms(2);
0000b9 e0a2      	LDI  R26,LOW(2)
0000ba e0b0      	LDI  R27,0
0000bb d273      	RCALL _delay_ms
                 ; 0000 0026 while(PINB.7 ==0){}
                 _0x7:
0000bc 9bb7      	SBIS 0x16,7
0000bd cffe      	RJMP _0x7
                 ; 0000 0027 while(PINB.7 ==1){
                 _0xA:
0000be 9bb7      	SBIS 0x16,7
0000bf c005      	RJMP _0xC
                 ; 0000 0028 count++;
0000c0 01f2      	MOVW R30,R4
0000c1 9631      	ADIW R30,1
0000c2 012f      	MOVW R4,R30
0000c3 9731      	SBIW R30,1
                 ; 0000 0029 }
0000c4 cff9      	RJMP _0xA
                 _0xC:
                 ; 0000 002A jrk=count*0.0036;
0000c5 01f2      	MOVW R30,R4
                +
0000c6 2f6f     +MOV R22 , R31
0000c7 0f66     +ADD R22 , R22
0000c8 0b66     +SBC R22 , R22
0000c9 2f76     +MOV R23 , R22
                 	__CWD1
0000ca d1e9      	RCALL __CDF1
                +
0000cb efaa     +LDI R26 , LOW ( 0x3B6BEDFA )
0000cc eebd     +LDI R27 , HIGH ( 0x3B6BEDFA )
0000cd e68b     +LDI R24 , BYTE3 ( 0x3B6BEDFA )
0000ce e39b     +LDI R25 , BYTE4 ( 0x3B6BEDFA )
                 	__GETD2N 0x3B6BEDFA
0000cf d211      	RCALL __MULF12
0000d0 93e0 026e 	STS  _jrk,R30
0000d2 93f0 026f 	STS  _jrk+1,R31
0000d4 9360 0270 	STS  _jrk+2,R22
0000d6 9370 0271 	STS  _jrk+3,R23
                 ; 0000 002B return jrk;}
0000d8 d1a2      	RCALL __CFD1U
0000d9 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 002E {
                 _main:
                 ; .FSTART _main
                 ; 0000 002F DDRB=0x00;
0000da e0e0      	LDI  R30,LOW(0)
0000db bbe7      	OUT  0x17,R30
                 ; 0000 0030 PORTB=0xC0;
0000dc ece0      	LDI  R30,LOW(192)
0000dd bbe8      	OUT  0x18,R30
                 ; 0000 0031 
                 ; 0000 0032 DDRC=0xFF;
0000de efef      	LDI  R30,LOW(255)
0000df bbe4      	OUT  0x14,R30
                 ; 0000 0033 PORTC=0x03;
0000e0 e0e3      	LDI  R30,LOW(3)
0000e1 bbe5      	OUT  0x15,R30
                 ; 0000 0034 
                 ; 0000 0035 lcd_init(32);
0000e2 e2a0      	LDI  R26,LOW(32)
0000e3 d0cc      	RCALL _lcd_init
                 ; 0000 0036 
                 ; 0000 0037 while (1)
                 _0xD:
                 ; 0000 0038 {
                 ; 0000 0039 // Place your code here
                 ; 0000 003A jarak = sensor_jarak();
0000e4 dfcd      	RCALL _sensor_jarak
0000e5 e6aa      	LDI  R26,LOW(_jarak)
0000e6 e0b2      	LDI  R27,HIGH(_jarak)
0000e7 27ff      	CLR  R31
0000e8 2766      	CLR  R22
0000e9 2777      	CLR  R23
0000ea d1c9      	RCALL __CDF1
                +
0000eb 93ed     +ST X + , R30
0000ec 93fd     +ST X + , R31
0000ed 936d     +ST X + , R22
0000ee 937c     +ST X , R23
                 	__PUTDP1
                 ; 0000 003B lcd_clear();
0000ef d119      	RCALL SUBOPT_0x0
                 ; 0000 003C lcd_gotoxy(0,0);
                 ; 0000 003D lcd_putsf("SENSOR GEMPA");
                +
0000f0 e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000f1 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000f2 d11b      	RCALL SUBOPT_0x1
                 ; 0000 003E lcd_gotoxy(0,1);
                 ; 0000 003F lcd_putsf("Kekuatan gempa: ");
                +
0000f3 e7a3     +LDI R26 , LOW ( 2 * _0x0 + ( 13 ) )
0000f4 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW2FN _0x0,13
0000f5 d0ab      	RCALL _lcd_putsf
                 ; 0000 0040 itoa (jarak, buff);
0000f6 91e0 026a 	LDS  R30,_jarak
0000f8 91f0 026b 	LDS  R31,_jarak+1
0000fa 9160 026c 	LDS  R22,_jarak+2
0000fc 9170 026d 	LDS  R23,_jarak+3
0000fe d17e      	RCALL __CFD1
0000ff 93fa      	ST   -Y,R31
000100 93ea      	ST   -Y,R30
000101 e6a0      	LDI  R26,LOW(_buff)
000102 e0b2      	LDI  R27,HIGH(_buff)
000103 d0d7      	RCALL _itoa
                 ; 0000 0041 lcd_gotoxy(16,1);
000104 e1e0      	LDI  R30,LOW(16)
000105 93ea      	ST   -Y,R30
000106 e0a1      	LDI  R26,LOW(1)
000107 d05c      	RCALL _lcd_gotoxy
                 ; 0000 0042 lcd_puts (buff);
000108 e6a0      	LDI  R26,LOW(_buff)
000109 e0b2      	LDI  R27,HIGH(_buff)
00010a d089      	RCALL _lcd_puts
                 ; 0000 0043 lcd_gotoxy(18,1);
00010b e1e2      	LDI  R30,LOW(18)
00010c 93ea      	ST   -Y,R30
00010d e0a1      	LDI  R26,LOW(1)
00010e d055      	RCALL _lcd_gotoxy
                 ; 0000 0044 lcd_putsf("Magnitudo");
                +
00010f e8a4     +LDI R26 , LOW ( 2 * _0x0 + ( 30 ) )
000110 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 30 ) )
                 	__POINTW2FN _0x0,30
000111 d08f      	RCALL _lcd_putsf
                 ; 0000 0045 delay_ms(200);
000112 eca8      	LDI  R26,LOW(200)
000113 e0b0      	LDI  R27,0
000114 d21a      	RCALL _delay_ms
                 ; 0000 0046 if (jarak <= 0){
000115 d0fd      	RCALL SUBOPT_0x2
000116 f074      	BRLT _0x10
                 ; 0000 0047 lcd_clear();
000117 d05e      	RCALL _lcd_clear
                 ; 0000 0048 PORTC.0 =1;
000118 9aa8      	SBI  0x15,0
                 ; 0000 0049 PORTC.1 =0;
000119 98a9      	CBI  0x15,1
                 ; 0000 004A 
                 ; 0000 004B lcd_clear();
00011a d0ee      	RCALL SUBOPT_0x0
                 ; 0000 004C lcd_gotoxy(0,0);
                 ; 0000 004D lcd_putsf("Kondisi aman");
                +
00011b e8ae     +LDI R26 , LOW ( 2 * _0x0 + ( 40 ) )
00011c e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 40 ) )
                 	__POINTW2FN _0x0,40
00011d d0f0      	RCALL SUBOPT_0x1
                 ; 0000 004E lcd_gotoxy(0,1);
                 ; 0000 004F lcd_putsf("Lanjutkan pekerjaan Anda : ");
                +
00011e e9ab     +LDI R26 , LOW ( 2 * _0x0 + ( 53 ) )
00011f e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 53 ) )
                 	__POINTW2FN _0x0,53
000120 d080      	RCALL _lcd_putsf
                 ; 0000 0050 delay_ms(100);
000121 e6a4      	LDI  R26,LOW(100)
000122 e0b0      	LDI  R27,0
000123 d20b      	RCALL _delay_ms
                 ; 0000 0051 }
                 ; 0000 0052 
                 ; 0000 0053 else if(jarak>0)
000124 c01b      	RJMP _0x15
                 _0x10:
000125 d0ed      	RCALL SUBOPT_0x2
000126 f4b4      	BRGE _0x16
                 ; 0000 0054 {
                 ; 0000 0055 lcd_clear();
000127 d04e      	RCALL _lcd_clear
                 ; 0000 0056 lcd_putsf("Gempa terjadi");
                +
000128 eba7     +LDI R26 , LOW ( 2 * _0x0 + ( 81 ) )
000129 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 81 ) )
                 	__POINTW2FN _0x0,81
00012a d0e3      	RCALL SUBOPT_0x1
                 ; 0000 0057 lcd_gotoxy(0,1);
                 ; 0000 0058 lcd_putsf("Segera melarikan diri ke tempat aman : ");
                +
00012b eca5     +LDI R26 , LOW ( 2 * _0x0 + ( 95 ) )
00012c e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 95 ) )
                 	__POINTW2FN _0x0,95
00012d d073      	RCALL _lcd_putsf
                 ; 0000 0059 PORTC.0=0;
00012e 98a8      	CBI  0x15,0
                 ; 0000 005A PORTC.1=1;
00012f d0ed      	RCALL SUBOPT_0x3
                 ; 0000 005B delay_ms(16);
                 ; 0000 005C PORTC.1=0;
                 ; 0000 005D delay_ms(16);
                 ; 0000 005E PORTC.1=1;
000130 d0ec      	RCALL SUBOPT_0x3
                 ; 0000 005F delay_ms(16);
                 ; 0000 0060 PORTC.1=0;
                 ; 0000 0061 delay_ms(16);
                 ; 0000 0062 PORTC.1=1;
000131 d0eb      	RCALL SUBOPT_0x3
                 ; 0000 0063 delay_ms(16);
                 ; 0000 0064 PORTC.1=0;
                 ; 0000 0065 delay_ms(16);
                 ; 0000 0066 PORTC.1=0;
000132 98a9      	CBI  0x15,1
                 ; 0000 0067 delay_ms(16);
000133 e1a0      	LDI  R26,LOW(16)
000134 e0b0      	LDI  R27,0
000135 d1f9      	RCALL _delay_ms
                 ; 0000 0068 PORTC.1=1;
000136 d0e6      	RCALL SUBOPT_0x3
                 ; 0000 0069 delay_ms(16);
                 ; 0000 006A PORTC.1=0;
                 ; 0000 006B delay_ms(16);
                 ; 0000 006C PORTC.2=1;
000137 9aaa      	SBI  0x15,2
                 ; 0000 006D lcd_gotoxy(0,0);
000138 e0e0      	LDI  R30,LOW(0)
000139 93ea      	ST   -Y,R30
00013a e0a0      	LDI  R26,LOW(0)
00013b d028      	RCALL _lcd_gotoxy
                 ; 0000 006E 
                 ; 0000 006F 
                 ; 0000 0070 }
                 ; 0000 0071 else {
00013c c003      	RJMP _0x2D
                 _0x16:
                 ; 0000 0072 PORTC.0=0;
00013d 98a8      	CBI  0x15,0
                 ; 0000 0073 PORTC.1=0;
00013e 98a9      	CBI  0x15,1
                 ; 0000 0074 lcd_clear();}
00013f d036      	RCALL _lcd_clear
                 _0x2D:
                 _0x15:
                 ; 0000 0075 }
000140 cfa3      	RJMP _0xD
                 ; 0000 0076 }
                 _0x32:
000141 cfff      	RJMP _0x32
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000142 931a      	ST   -Y,R17
000143 2f1a      	MOV  R17,R26
000144 b3e2      	IN   R30,0x12
000145 70ef      	ANDI R30,LOW(0xF)
000146 2fae      	MOV  R26,R30
000147 2fe1      	MOV  R30,R17
000148 7fe0      	ANDI R30,LOW(0xF0)
000149 2bea      	OR   R30,R26
00014a bbe2      	OUT  0x12,R30
                +
00014b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00014c 958a     +DEC R24
00014d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00014e 9a92      	SBI  0x12,2
                +
00014f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000150 958a     +DEC R24
000151 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000152 9892      	CBI  0x12,2
                +
000153 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000154 958a     +DEC R24
000155 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000156 c082      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000157 93aa      	ST   -Y,R26
000158 81a8      	LD   R26,Y
000159 dfe8      	RCALL __lcd_write_nibble_G100
00015a 81e8          ld    r30,y
00015b 95e2          swap  r30
00015c 83e8          st    y,r30
00015d 81a8      	LD   R26,Y
00015e dfe3      	RCALL __lcd_write_nibble_G100
                +
00015f e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000160 958a     +DEC R24
000161 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000162 9621      	ADIW R28,1
000163 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000164 931a      	ST   -Y,R17
000165 930a      	ST   -Y,R16
000166 2f1a      	MOV  R17,R26
000167 810a      	LDD  R16,Y+2
000168 2fe1      	MOV  R30,R17
000169 e0f0      	LDI  R31,0
00016a 58ee      	SUBI R30,LOW(-__base_y_G100)
00016b 4ffd      	SBCI R31,HIGH(-__base_y_G100)
00016c 81e0      	LD   R30,Z
00016d 0fe0      	ADD  R30,R16
00016e 2fae      	MOV  R26,R30
00016f dfe7      	RCALL __lcd_write_data
000170 2e70      	MOV  R7,R16
000171 2e61      	MOV  R6,R17
000172 8119      	LDD  R17,Y+1
000173 8108      	LDD  R16,Y+0
000174 9623      	ADIW R28,3
000175 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000176 e0a2      	LDI  R26,LOW(2)
000177 d0ad      	RCALL SUBOPT_0x4
000178 e0ac      	LDI  R26,LOW(12)
000179 dfdd      	RCALL __lcd_write_data
00017a e0a1      	LDI  R26,LOW(1)
00017b d0a9      	RCALL SUBOPT_0x4
00017c e0e0      	LDI  R30,LOW(0)
00017d 2e6e      	MOV  R6,R30
00017e 2e7e      	MOV  R7,R30
00017f 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000180 931a      	ST   -Y,R17
000181 2f1a      	MOV  R17,R26
000182 301a      	CPI  R17,10
000183 f011      	BREQ _0x2000005
000184 1479      	CP   R7,R9
000185 f040      	BRLO _0x2000004
                 _0x2000005:
000186 e0e0      	LDI  R30,LOW(0)
000187 93ea      	ST   -Y,R30
000188 9463      	INC  R6
000189 2da6      	MOV  R26,R6
00018a dfd9      	RCALL _lcd_gotoxy
00018b 301a      	CPI  R17,10
00018c f409      	BRNE _0x2000007
00018d c04b      	RJMP _0x20C0001
                 _0x2000007:
                 _0x2000004:
00018e 9473      	INC  R7
00018f 9a90      	SBI  0x12,0
000190 2fa1      	MOV  R26,R17
000191 dfc5      	RCALL __lcd_write_data
000192 9890      	CBI  0x12,0
000193 c045      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000194 d09b      	RCALL __SAVELOCR4
000195 019d      	MOVW R18,R26
                 _0x2000008:
000196 01d9      	MOVW R26,R18
                +
000197 5f2f     +SUBI R18 , LOW ( - 1 )
000198 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000199 91ec      	LD   R30,X
00019a 2f1e      	MOV  R17,R30
00019b 30e0      	CPI  R30,0
00019c f019      	BREQ _0x200000A
00019d 2fa1      	MOV  R26,R17
00019e dfe1      	RCALL _lcd_putchar
00019f cff6      	RJMP _0x2000008
                 _0x200000A:
0001a0 c00c      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001a1 d08e      	RCALL __SAVELOCR4
0001a2 019d      	MOVW R18,R26
                 _0x200000B:
0001a3 01f9      	MOVW R30,R18
                +
0001a4 5f2f     +SUBI R18 , LOW ( - 1 )
0001a5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001a6 91e4      	LPM  R30,Z
0001a7 2f1e      	MOV  R17,R30
0001a8 30e0      	CPI  R30,0
0001a9 f019      	BREQ _0x200000D
0001aa 2fa1      	MOV  R26,R17
0001ab dfd4      	RCALL _lcd_putchar
0001ac cff6      	RJMP _0x200000B
                 _0x200000D:
                 _0x20C0002:
0001ad d087      	RCALL __LOADLOCR4
0001ae 9624      	ADIW R28,4
0001af 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001b0 931a      	ST   -Y,R17
0001b1 2f1a      	MOV  R17,R26
0001b2 b3e1      	IN   R30,0x11
0001b3 6fe0      	ORI  R30,LOW(0xF0)
0001b4 bbe1      	OUT  0x11,R30
0001b5 9a8a      	SBI  0x11,2
0001b6 9a88      	SBI  0x11,0
0001b7 9a89      	SBI  0x11,1
0001b8 9892      	CBI  0x12,2
0001b9 9890      	CBI  0x12,0
0001ba 9891      	CBI  0x12,1
0001bb 2e91      	MOV  R9,R17
0001bc 2fe1      	MOV  R30,R17
0001bd 58e0      	SUBI R30,-LOW(128)
                +
0001be 93e0 0274+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001c0 2fe1      	MOV  R30,R17
0001c1 54e0      	SUBI R30,-LOW(192)
                +
0001c2 93e0 0275+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001c4 e1a4      	LDI  R26,LOW(20)
0001c5 e0b0      	LDI  R27,0
0001c6 d168      	RCALL _delay_ms
0001c7 d061      	RCALL SUBOPT_0x5
0001c8 d060      	RCALL SUBOPT_0x5
0001c9 d05f      	RCALL SUBOPT_0x5
0001ca e2a0      	LDI  R26,LOW(32)
0001cb df76      	RCALL __lcd_write_nibble_G100
                +
0001cc ec88     +LDI R24 , LOW ( 200 )
0001cd e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001ce 9701     +SBIW R24 , 1
0001cf f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001d0 e2a8      	LDI  R26,LOW(40)
0001d1 df85      	RCALL __lcd_write_data
0001d2 e0a4      	LDI  R26,LOW(4)
0001d3 df83      	RCALL __lcd_write_data
0001d4 e8a5      	LDI  R26,LOW(133)
0001d5 df81      	RCALL __lcd_write_data
0001d6 e0a6      	LDI  R26,LOW(6)
0001d7 df7f      	RCALL __lcd_write_data
0001d8 df9d      	RCALL _lcd_clear
                 _0x20C0001:
0001d9 9119      	LD   R17,Y+
0001da 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0001db 93ba      	ST   -Y,R27
0001dc 93aa      	ST   -Y,R26
0001dd 91a9          ld   r26,y+
0001de 91b9          ld   r27,y+
0001df 91e9          ld   r30,y+
0001e0 91f9          ld   r31,y+
0001e1 9630          adiw r30,0
0001e2 f42a          brpl __itoa0
0001e3 95e0          com  r30
0001e4 95f0          com  r31
0001e5 9631          adiw r30,1
0001e6 e26d          ldi  r22,'-'
0001e7 936d          st   x+,r22
                 __itoa0:
0001e8 94e8          clt
0001e9 e180          ldi  r24,low(10000)
0001ea e297          ldi  r25,high(10000)
0001eb d00d          rcall __itoa1
0001ec ee88          ldi  r24,low(1000)
0001ed e093          ldi  r25,high(1000)
0001ee d00a          rcall __itoa1
0001ef e684          ldi  r24,100
0001f0 2799          clr  r25
0001f1 d007          rcall __itoa1
0001f2 e08a          ldi  r24,10
0001f3 d005          rcall __itoa1
0001f4 2f6e          mov  r22,r30
0001f5 d010          rcall __itoa5
0001f6 2766          clr  r22
0001f7 936c          st   x,r22
0001f8 9508          ret
                 
                 __itoa1:
0001f9 2766          clr	 r22
                 __itoa2:
0001fa 17e8          cp   r30,r24
0001fb 07f9          cpc  r31,r25
0001fc f020          brlo __itoa3
0001fd 9563          inc  r22
0001fe 1be8          sub  r30,r24
0001ff 0bf9          sbc  r31,r25
000200 f7c9          brne __itoa2
                 __itoa3:
000201 2366          tst  r22
000202 f411          brne __itoa4
000203 f016          brts __itoa5
000204 9508          ret
                 __itoa4:
000205 9468          set
                 __itoa5:
000206 5d60          subi r22,-0x30
000207 936d          st   x+,r22
000208 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _buff:
000260           	.BYTE 0xA
                 _jarak:
00026a           	.BYTE 0x4
                 _jrk:
00026e           	.BYTE 0x4
                 __base_y_G100:
000272           	.BYTE 0x4
                 __seed_G101:
000276           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
000209 df6c      	RCALL _lcd_clear
00020a e0e0      	LDI  R30,LOW(0)
00020b 93ea      	ST   -Y,R30
00020c e0a0      	LDI  R26,LOW(0)
00020d cf56      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1:
00020e df92      	RCALL _lcd_putsf
00020f e0e0      	LDI  R30,LOW(0)
000210 93ea      	ST   -Y,R30
000211 e0a1      	LDI  R26,LOW(1)
000212 cf51      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
000213 91a0 026a 	LDS  R26,_jarak
000215 91b0 026b 	LDS  R27,_jarak+1
000217 9180 026c 	LDS  R24,_jarak+2
000219 9190 026d 	LDS  R25,_jarak+3
00021b d02c      	RCALL __CPD02
00021c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x3:
00021d 9aa9      	SBI  0x15,1
00021e e1a0      	LDI  R26,LOW(16)
00021f e0b0      	LDI  R27,0
000220 d10e      	RCALL _delay_ms
000221 98a9      	CBI  0x15,1
000222 e1a0      	LDI  R26,LOW(16)
000223 e0b0      	LDI  R27,0
000224 c10a      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000225 df31      	RCALL __lcd_write_data
000226 e0a3      	LDI  R26,LOW(3)
000227 e0b0      	LDI  R27,0
000228 c106      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
000229 e3a0      	LDI  R26,LOW(48)
00022a df17      	RCALL __lcd_write_nibble_G100
                +
00022b ec88     +LDI R24 , LOW ( 200 )
00022c e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00022d 9701     +SBIW R24 , 1
00022e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00022f 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR4:
000230 933a      	ST   -Y,R19
                 __SAVELOCR3:
000231 932a      	ST   -Y,R18
                 __SAVELOCR2:
000232 931a      	ST   -Y,R17
000233 930a      	ST   -Y,R16
000234 9508      	RET
                 
                 __LOADLOCR4:
000235 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000236 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000237 8119      	LDD  R17,Y+1
000238 8108      	LD   R16,Y
000239 9508      	RET
                 
                 __ANEGD1:
00023a 95f0      	COM  R31
00023b 9560      	COM  R22
00023c 9570      	COM  R23
00023d 95e1      	NEG  R30
00023e 4fff      	SBCI R31,-1
00023f 4f6f      	SBCI R22,-1
000240 4f7f      	SBCI R23,-1
000241 9508      	RET
                 
                 __CBD1:
000242 2ffe      	MOV  R31,R30
000243 0fff      	ADD  R31,R31
000244 0bff      	SBC  R31,R31
000245 2f6f      	MOV  R22,R31
000246 2f7f      	MOV  R23,R31
000247 9508      	RET
                 
                 __CPD02:
000248 2400      	CLR  R0
000249 160a      	CP   R0,R26
00024a 060b      	CPC  R0,R27
00024b 0608      	CPC  R0,R24
00024c 0609      	CPC  R0,R25
00024d 9508      	RET
                 
                 __ROUND_REPACK:
00024e 2355      	TST  R21
00024f f442      	BRPL __REPACK
000250 3850      	CPI  R21,0x80
000251 f411      	BRNE __ROUND_REPACK0
000252 ffe0      	SBRS R30,0
000253 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000254 9631      	ADIW R30,1
000255 1f69      	ADC  R22,R25
000256 1f79      	ADC  R23,R25
000257 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000258 e850      	LDI  R21,0x80
000259 2757      	EOR  R21,R23
00025a f411      	BRNE __REPACK0
00025b 935f      	PUSH R21
00025c c073      	RJMP __ZERORES
                 __REPACK0:
00025d 3f5f      	CPI  R21,0xFF
00025e f031      	BREQ __REPACK1
00025f 0f66      	LSL  R22
000260 0c00      	LSL  R0
000261 9557      	ROR  R21
000262 9567      	ROR  R22
000263 2f75      	MOV  R23,R21
000264 9508      	RET
                 __REPACK1:
000265 935f      	PUSH R21
000266 2000      	TST  R0
000267 f00a      	BRMI __REPACK2
000268 c072      	RJMP __MAXRES
                 __REPACK2:
000269 c06b      	RJMP __MINRES
                 
                 __UNPACK:
00026a e850      	LDI  R21,0x80
00026b 2e19      	MOV  R1,R25
00026c 2215      	AND  R1,R21
00026d 0f88      	LSL  R24
00026e 1f99      	ROL  R25
00026f 2795      	EOR  R25,R21
000270 0f55      	LSL  R21
000271 9587      	ROR  R24
                 
                 __UNPACK1:
000272 e850      	LDI  R21,0x80
000273 2e07      	MOV  R0,R23
000274 2205      	AND  R0,R21
000275 0f66      	LSL  R22
000276 1f77      	ROL  R23
000277 2775      	EOR  R23,R21
000278 0f55      	LSL  R21
000279 9567      	ROR  R22
00027a 9508      	RET
                 
                 __CFD1U:
00027b 9468      	SET
00027c c001      	RJMP __CFD1U0
                 __CFD1:
00027d 94e8      	CLT
                 __CFD1U0:
00027e 935f      	PUSH R21
00027f dff2      	RCALL __UNPACK1
000280 3870      	CPI  R23,0x80
000281 f018      	BRLO __CFD10
000282 3f7f      	CPI  R23,0xFF
000283 f408      	BRCC __CFD10
000284 c04b      	RJMP __ZERORES
                 __CFD10:
000285 e156      	LDI  R21,22
000286 1b57      	SUB  R21,R23
000287 f4aa      	BRPL __CFD11
000288 9551      	NEG  R21
000289 3058      	CPI  R21,8
00028a f40e      	BRTC __CFD19
00028b 3059      	CPI  R21,9
                 __CFD19:
00028c f030      	BRLO __CFD17
00028d efef      	SER  R30
00028e efff      	SER  R31
00028f ef6f      	SER  R22
000290 e77f      	LDI  R23,0x7F
000291 f977      	BLD  R23,7
000292 c01a      	RJMP __CFD15
                 __CFD17:
000293 2777      	CLR  R23
000294 2355      	TST  R21
000295 f0b9      	BREQ __CFD15
                 __CFD18:
000296 0fee      	LSL  R30
000297 1fff      	ROL  R31
000298 1f66      	ROL  R22
000299 1f77      	ROL  R23
00029a 955a      	DEC  R21
00029b f7d1      	BRNE __CFD18
00029c c010      	RJMP __CFD15
                 __CFD11:
00029d 2777      	CLR  R23
                 __CFD12:
00029e 3058      	CPI  R21,8
00029f f028      	BRLO __CFD13
0002a0 2fef      	MOV  R30,R31
0002a1 2ff6      	MOV  R31,R22
0002a2 2f67      	MOV  R22,R23
0002a3 5058      	SUBI R21,8
0002a4 cff9      	RJMP __CFD12
                 __CFD13:
0002a5 2355      	TST  R21
0002a6 f031      	BREQ __CFD15
                 __CFD14:
0002a7 9576      	LSR  R23
0002a8 9567      	ROR  R22
0002a9 95f7      	ROR  R31
0002aa 95e7      	ROR  R30
0002ab 955a      	DEC  R21
0002ac f7d1      	BRNE __CFD14
                 __CFD15:
0002ad 2000      	TST  R0
0002ae f40a      	BRPL __CFD16
0002af df8a      	RCALL __ANEGD1
                 __CFD16:
0002b0 915f      	POP  R21
0002b1 9508      	RET
                 
                 __CDF1U:
0002b2 9468      	SET
0002b3 c001      	RJMP __CDF1U0
                 __CDF1:
0002b4 94e8      	CLT
                 __CDF1U0:
0002b5 9730      	SBIW R30,0
0002b6 4060      	SBCI R22,0
0002b7 4070      	SBCI R23,0
0002b8 f0b1      	BREQ __CDF10
0002b9 2400      	CLR  R0
0002ba f026      	BRTS __CDF11
0002bb 2377      	TST  R23
0002bc f412      	BRPL __CDF11
0002bd 9400      	COM  R0
0002be df7b      	RCALL __ANEGD1
                 __CDF11:
0002bf 2e17      	MOV  R1,R23
0002c0 e17e      	LDI  R23,30
0002c1 2011      	TST  R1
                 __CDF12:
0002c2 f032      	BRMI __CDF13
0002c3 957a      	DEC  R23
0002c4 0fee      	LSL  R30
0002c5 1fff      	ROL  R31
0002c6 1f66      	ROL  R22
0002c7 1c11      	ROL  R1
0002c8 cff9      	RJMP __CDF12
                 __CDF13:
0002c9 2fef      	MOV  R30,R31
0002ca 2ff6      	MOV  R31,R22
0002cb 2d61      	MOV  R22,R1
0002cc 935f      	PUSH R21
0002cd df8a      	RCALL __REPACK
0002ce 915f      	POP  R21
                 __CDF10:
0002cf 9508      	RET
                 
                 __ZERORES:
0002d0 27ee      	CLR  R30
0002d1 27ff      	CLR  R31
0002d2 01bf      	MOVW R22,R30
0002d3 915f      	POP  R21
0002d4 9508      	RET
                 
                 __MINRES:
0002d5 efef      	SER  R30
0002d6 efff      	SER  R31
0002d7 e76f      	LDI  R22,0x7F
0002d8 ef7f      	SER  R23
0002d9 915f      	POP  R21
0002da 9508      	RET
                 
                 __MAXRES:
0002db efef      	SER  R30
0002dc efff      	SER  R31
0002dd e76f      	LDI  R22,0x7F
0002de e77f      	LDI  R23,0x7F
0002df 915f      	POP  R21
0002e0 9508      	RET
                 
                 __MULF12:
0002e1 935f      	PUSH R21
0002e2 df87      	RCALL __UNPACK
0002e3 3870      	CPI  R23,0x80
0002e4 f359      	BREQ __ZERORES
0002e5 3890      	CPI  R25,0x80
0002e6 f349      	BREQ __ZERORES
0002e7 2401      	EOR  R0,R1
0002e8 9408      	SEC
0002e9 1f79      	ADC  R23,R25
0002ea f423      	BRVC __MULF124
0002eb f324      	BRLT __ZERORES
                 __MULF125:
0002ec 2000      	TST  R0
0002ed f33a      	BRMI __MINRES
0002ee cfec      	RJMP __MAXRES
                 __MULF124:
0002ef 920f      	PUSH R0
0002f0 931f      	PUSH R17
0002f1 932f      	PUSH R18
0002f2 933f      	PUSH R19
0002f3 934f      	PUSH R20
0002f4 2711      	CLR  R17
0002f5 2722      	CLR  R18
0002f6 2799      	CLR  R25
0002f7 9f68      	MUL  R22,R24
0002f8 01a0      	MOVW R20,R0
0002f9 9f8f      	MUL  R24,R31
0002fa 2d30      	MOV  R19,R0
0002fb 0d41      	ADD  R20,R1
0002fc 1f59      	ADC  R21,R25
0002fd 9f6b      	MUL  R22,R27
0002fe 0d30      	ADD  R19,R0
0002ff 1d41      	ADC  R20,R1
000300 1f59      	ADC  R21,R25
000301 9f8e      	MUL  R24,R30
000302 d027      	RCALL __MULF126
000303 9fbf      	MUL  R27,R31
000304 d025      	RCALL __MULF126
000305 9f6a      	MUL  R22,R26
000306 d023      	RCALL __MULF126
000307 9fbe      	MUL  R27,R30
000308 d01d      	RCALL __MULF127
000309 9faf      	MUL  R26,R31
00030a d01b      	RCALL __MULF127
00030b 9fae      	MUL  R26,R30
00030c 0d11      	ADD  R17,R1
00030d 1f29      	ADC  R18,R25
00030e 1f39      	ADC  R19,R25
00030f 1f49      	ADC  R20,R25
000310 1f59      	ADC  R21,R25
000311 2fe3      	MOV  R30,R19
000312 2ff4      	MOV  R31,R20
000313 2f65      	MOV  R22,R21
000314 2f52      	MOV  R21,R18
000315 914f      	POP  R20
000316 913f      	POP  R19
000317 912f      	POP  R18
000318 911f      	POP  R17
000319 900f      	POP  R0
00031a 2366      	TST  R22
00031b f02a      	BRMI __MULF122
00031c 0f55      	LSL  R21
00031d 1fee      	ROL  R30
00031e 1fff      	ROL  R31
00031f 1f66      	ROL  R22
000320 c002      	RJMP __MULF123
                 __MULF122:
000321 9573      	INC  R23
000322 f24b      	BRVS __MULF125
                 __MULF123:
000323 df2a      	RCALL __ROUND_REPACK
000324 915f      	POP  R21
000325 9508      	RET
                 
                 __MULF127:
000326 0d10      	ADD  R17,R0
000327 1d21      	ADC  R18,R1
000328 1f39      	ADC  R19,R25
000329 c002      	RJMP __MULF128
                 __MULF126:
00032a 0d20      	ADD  R18,R0
00032b 1d31      	ADC  R19,R1
                 __MULF128:
00032c 1f49      	ADC  R20,R25
00032d 1f59      	ADC  R21,R25
00032e 9508      	RET
                 
                 _delay_ms:
00032f 9610      	adiw r26,0
000330 f039      	breq __delay_ms1
                 __delay_ms0:
000331 95a8      	wdr
                +
000332 ed80     +LDI R24 , LOW ( 0x7D0 )
000333 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000334 9701     +SBIW R24 , 1
000335 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000336 9711      	sbiw r26,1
000337 f7c9      	brne __delay_ms0
                 __delay_ms1:
000338 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  25 r1 :  13 r2 :   0 r3 :   0 r4 :   4 r5 :   1 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   7 r17:  30 r18:  15 r19:  12 r20:   8 r21:  44 r22:  48 r23:  34 
r24:  37 r25:  30 r26:  63 r27:  28 r28:   4 r29:   1 r30: 104 r31:  40 
x  :  11 y  :  36 z  :   9 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  15 add   :   8 
adiw  :   8 and   :   2 andi  :   2 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  11 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   5 
brlt  :   2 brmi  :   4 brne  :  19 brpl  :   5 brsh  :   0 brtc  :   1 
brts  :   2 brvc  :   1 brvs  :   2 bset  :   0 bst   :   0 call  :   0 
cbi   :  12 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   6 
cp    :   3 cpc   :   4 cpi   :  13 cpse  :   0 dec   :   9 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   4 jmp   :  22 ld    :  11 ldd   :   6 ldi   : 106 
lds   :   8 lpm   :   9 lsl   :   9 lsr   :   1 mov   :  42 movw  :  12 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   1 out   :  12 pop   :  11 push  :  10 rcall :  79 ret   :  26 
reti  :   0 rjmp  :  32 rol   :  11 ror   :   7 sbc   :   3 sbci  :   8 
sbi   :   9 sbic  :   0 sbis  :   2 sbiw  :   9 sbr   :   0 sbrc  :   0 
sbrs  :   1 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  31 std   :   0 sts   :   6 sub   :   2 subi  :   7 swap  :   1 
tst   :  10 wdr   :   1 
Instructions used: 68 out of 116 (58.6%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000672   1468    182   1650   32768   5.0%
[.dseg] 0x000060 0x00027a      0     26     26    2048   1.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 8 warnings
